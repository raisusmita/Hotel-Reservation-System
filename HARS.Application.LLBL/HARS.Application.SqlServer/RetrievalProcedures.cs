//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.6.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.Data;
using System.Collections.Generic;
using SD.LLBLGen.Pro.ORMSupportClasses;
using SD.LLBLGen.Pro.QuerySpec.Adapter;

namespace HARS.Application.LLBL.SqlServer
{
	/// <summary>Class which contains the static logic to execute retrieval stored procedures in the database.</summary>
	public static partial class RetrievalProcedures
	{

		/// <summary>Calls stored procedure 'SpBookingSel'.<br/><br/></summary>
		/// <param name="bookingId">Input parameter. </param>
		/// <param name="searchText">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpBookingSel(System.Int32 bookingId, System.String searchText)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpBookingSel(bookingId, searchText, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpBookingSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="bookingId">Input parameter. </param>
		/// <param name="searchText">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpBookingSel(System.Int32 bookingId, System.String searchText, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpBookingSelCall(dataAccessProvider, bookingId, searchText))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpBookingSel'.</summary>
		/// <param name="bookingId">Input parameter of stored procedure</param>
		/// <param name="searchText">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpBookingSelCallAsQuery(System.Int32 bookingId, System.String searchText)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpBookingSelCallAsQuery(bookingId, searchText, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpBookingSel'.</summary>
		/// <param name="bookingId">Input parameter of stored procedure</param>
		/// <param name="searchText">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpBookingSelCallAsQuery(System.Int32 bookingId, System.String searchText, IDataAccessCore dataAccessProvider)
		{
			return CreateSpBookingSelCall(dataAccessProvider, bookingId, searchText).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpBranchSel'.<br/><br/></summary>
		/// <param name="branchId">Input parameter. </param>
		/// <param name="searchText">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpBranchSel(System.Int32 branchId, System.String searchText)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpBranchSel(branchId, searchText, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpBranchSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="branchId">Input parameter. </param>
		/// <param name="searchText">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpBranchSel(System.Int32 branchId, System.String searchText, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpBranchSelCall(dataAccessProvider, branchId, searchText))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpBranchSel'.</summary>
		/// <param name="branchId">Input parameter of stored procedure</param>
		/// <param name="searchText">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpBranchSelCallAsQuery(System.Int32 branchId, System.String searchText)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpBranchSelCallAsQuery(branchId, searchText, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpBranchSel'.</summary>
		/// <param name="branchId">Input parameter of stored procedure</param>
		/// <param name="searchText">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpBranchSelCallAsQuery(System.Int32 branchId, System.String searchText, IDataAccessCore dataAccessProvider)
		{
			return CreateSpBranchSelCall(dataAccessProvider, branchId, searchText).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpCustomerSel'.<br/><br/></summary>
		/// <param name="customerId">Input parameter. </param>
		/// <param name="searchText">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpCustomerSel(System.Int32 customerId, System.String searchText)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpCustomerSel(customerId, searchText, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpCustomerSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="customerId">Input parameter. </param>
		/// <param name="searchText">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpCustomerSel(System.Int32 customerId, System.String searchText, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpCustomerSelCall(dataAccessProvider, customerId, searchText))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpCustomerSel'.</summary>
		/// <param name="customerId">Input parameter of stored procedure</param>
		/// <param name="searchText">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpCustomerSelCallAsQuery(System.Int32 customerId, System.String searchText)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpCustomerSelCallAsQuery(customerId, searchText, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpCustomerSel'.</summary>
		/// <param name="customerId">Input parameter of stored procedure</param>
		/// <param name="searchText">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpCustomerSelCallAsQuery(System.Int32 customerId, System.String searchText, IDataAccessCore dataAccessProvider)
		{
			return CreateSpCustomerSelCall(dataAccessProvider, customerId, searchText).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpHotelSel'.<br/><br/></summary>
		/// <param name="hotelId">Input parameter. </param>
		/// <param name="searchText">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpHotelSel(System.Int32 hotelId, System.String searchText)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpHotelSel(hotelId, searchText, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpHotelSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="hotelId">Input parameter. </param>
		/// <param name="searchText">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpHotelSel(System.Int32 hotelId, System.String searchText, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpHotelSelCall(dataAccessProvider, hotelId, searchText))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpHotelSel'.</summary>
		/// <param name="hotelId">Input parameter of stored procedure</param>
		/// <param name="searchText">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpHotelSelCallAsQuery(System.Int32 hotelId, System.String searchText)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpHotelSelCallAsQuery(hotelId, searchText, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpHotelSel'.</summary>
		/// <param name="hotelId">Input parameter of stored procedure</param>
		/// <param name="searchText">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpHotelSelCallAsQuery(System.Int32 hotelId, System.String searchText, IDataAccessCore dataAccessProvider)
		{
			return CreateSpHotelSelCall(dataAccessProvider, hotelId, searchText).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpInvoiceSel'.<br/><br/></summary>
		/// <param name="invoiceId">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpInvoiceSel(System.Int32 invoiceId)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpInvoiceSel(invoiceId, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpInvoiceSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="invoiceId">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpInvoiceSel(System.Int32 invoiceId, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpInvoiceSelCall(dataAccessProvider, invoiceId))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpInvoiceSel'.</summary>
		/// <param name="invoiceId">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpInvoiceSelCallAsQuery(System.Int32 invoiceId)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpInvoiceSelCallAsQuery(invoiceId, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpInvoiceSel'.</summary>
		/// <param name="invoiceId">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpInvoiceSelCallAsQuery(System.Int32 invoiceId, IDataAccessCore dataAccessProvider)
		{
			return CreateSpInvoiceSelCall(dataAccessProvider, invoiceId).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpReservationSel'.<br/><br/></summary>
		/// <param name="reservationId">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpReservationSel(System.Int32 reservationId)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpReservationSel(reservationId, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpReservationSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="reservationId">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpReservationSel(System.Int32 reservationId, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpReservationSelCall(dataAccessProvider, reservationId))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpReservationSel'.</summary>
		/// <param name="reservationId">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpReservationSelCallAsQuery(System.Int32 reservationId)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpReservationSelCallAsQuery(reservationId, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpReservationSel'.</summary>
		/// <param name="reservationId">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpReservationSelCallAsQuery(System.Int32 reservationId, IDataAccessCore dataAccessProvider)
		{
			return CreateSpReservationSelCall(dataAccessProvider, reservationId).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpRoomAvailabilitySel'.<br/><br/></summary>
		/// <param name="startDate">Input parameter. </param>
		/// <param name="endDate">Input parameter. </param>
		/// <param name="branchId">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpRoomAvailabilitySel(System.DateTime startDate, System.DateTime endDate, System.Int32 branchId)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpRoomAvailabilitySel(startDate, endDate, branchId, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpRoomAvailabilitySel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="startDate">Input parameter. </param>
		/// <param name="endDate">Input parameter. </param>
		/// <param name="branchId">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpRoomAvailabilitySel(System.DateTime startDate, System.DateTime endDate, System.Int32 branchId, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpRoomAvailabilitySelCall(dataAccessProvider, startDate, endDate, branchId))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpRoomAvailabilitySel'.</summary>
		/// <param name="startDate">Input parameter of stored procedure</param>
		/// <param name="endDate">Input parameter of stored procedure</param>
		/// <param name="branchId">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpRoomAvailabilitySelCallAsQuery(System.DateTime startDate, System.DateTime endDate, System.Int32 branchId)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpRoomAvailabilitySelCallAsQuery(startDate, endDate, branchId, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpRoomAvailabilitySel'.</summary>
		/// <param name="startDate">Input parameter of stored procedure</param>
		/// <param name="endDate">Input parameter of stored procedure</param>
		/// <param name="branchId">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpRoomAvailabilitySelCallAsQuery(System.DateTime startDate, System.DateTime endDate, System.Int32 branchId, IDataAccessCore dataAccessProvider)
		{
			return CreateSpRoomAvailabilitySelCall(dataAccessProvider, startDate, endDate, branchId).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpRoomSel'.<br/><br/></summary>
		/// <param name="roomId">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpRoomSel(System.Int32 roomId)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpRoomSel(roomId, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpRoomSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="roomId">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpRoomSel(System.Int32 roomId, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpRoomSelCall(dataAccessProvider, roomId))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpRoomSel'.</summary>
		/// <param name="roomId">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpRoomSelCallAsQuery(System.Int32 roomId)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpRoomSelCallAsQuery(roomId, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpRoomSel'.</summary>
		/// <param name="roomId">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpRoomSelCallAsQuery(System.Int32 roomId, IDataAccessCore dataAccessProvider)
		{
			return CreateSpRoomSelCall(dataAccessProvider, roomId).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpSeasonSel'.<br/><br/></summary>
		/// <param name="seasonId">Input parameter. </param>
		/// <param name="searchText">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpSeasonSel(System.Int32 seasonId, System.String searchText)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpSeasonSel(seasonId, searchText, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpSeasonSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="seasonId">Input parameter. </param>
		/// <param name="searchText">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpSeasonSel(System.Int32 seasonId, System.String searchText, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpSeasonSelCall(dataAccessProvider, seasonId, searchText))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpSeasonSel'.</summary>
		/// <param name="seasonId">Input parameter of stored procedure</param>
		/// <param name="searchText">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpSeasonSelCallAsQuery(System.Int32 seasonId, System.String searchText)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpSeasonSelCallAsQuery(seasonId, searchText, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpSeasonSel'.</summary>
		/// <param name="seasonId">Input parameter of stored procedure</param>
		/// <param name="searchText">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpSeasonSelCallAsQuery(System.Int32 seasonId, System.String searchText, IDataAccessCore dataAccessProvider)
		{
			return CreateSpSeasonSelCall(dataAccessProvider, seasonId, searchText).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpServiceCategorySel'.<br/><br/></summary>
		/// <param name="serviceCategoryId">Input parameter. </param>
		/// <param name="searchText">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpServiceCategorySel(System.Int32 serviceCategoryId, System.String searchText)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpServiceCategorySel(serviceCategoryId, searchText, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpServiceCategorySel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="serviceCategoryId">Input parameter. </param>
		/// <param name="searchText">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpServiceCategorySel(System.Int32 serviceCategoryId, System.String searchText, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpServiceCategorySelCall(dataAccessProvider, serviceCategoryId, searchText))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpServiceCategorySel'.</summary>
		/// <param name="serviceCategoryId">Input parameter of stored procedure</param>
		/// <param name="searchText">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpServiceCategorySelCallAsQuery(System.Int32 serviceCategoryId, System.String searchText)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpServiceCategorySelCallAsQuery(serviceCategoryId, searchText, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpServiceCategorySel'.</summary>
		/// <param name="serviceCategoryId">Input parameter of stored procedure</param>
		/// <param name="searchText">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpServiceCategorySelCallAsQuery(System.Int32 serviceCategoryId, System.String searchText, IDataAccessCore dataAccessProvider)
		{
			return CreateSpServiceCategorySelCall(dataAccessProvider, serviceCategoryId, searchText).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpServiceSel'.<br/><br/></summary>
		/// <param name="serviceId">Input parameter. </param>
		/// <param name="searchText">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpServiceSel(System.Int32 serviceId, System.String searchText)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpServiceSel(serviceId, searchText, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpServiceSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="serviceId">Input parameter. </param>
		/// <param name="searchText">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpServiceSel(System.Int32 serviceId, System.String searchText, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpServiceSelCall(dataAccessProvider, serviceId, searchText))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpServiceSel'.</summary>
		/// <param name="serviceId">Input parameter of stored procedure</param>
		/// <param name="searchText">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpServiceSelCallAsQuery(System.Int32 serviceId, System.String searchText)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpServiceSelCallAsQuery(serviceId, searchText, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpServiceSel'.</summary>
		/// <param name="serviceId">Input parameter of stored procedure</param>
		/// <param name="searchText">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpServiceSelCallAsQuery(System.Int32 serviceId, System.String searchText, IDataAccessCore dataAccessProvider)
		{
			return CreateSpServiceSelCall(dataAccessProvider, serviceId, searchText).ToRetrievalQuery();
		}

		/// <summary>Calls stored procedure 'SpTransactionSel'.<br/><br/></summary>
		/// <param name="transactionId">Input parameter. </param>
		/// <param name="searchText">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpTransactionSel(System.Int32 transactionId, System.String searchText)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return SpTransactionSel(transactionId, searchText, dataAccessProvider);
			}
		}

		/// <summary>Calls stored procedure 'SpTransactionSel'.<br/><br/></summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="transactionId">Input parameter. </param>
		/// <param name="searchText">Input parameter. </param>
		/// <returns>Filled DataTable with resultset(s) of stored procedure</returns>
		public static DataTable SpTransactionSel(System.Int32 transactionId, System.String searchText, IDataAccessCore dataAccessProvider)
		{
			using(StoredProcedureCall call = CreateSpTransactionSelCall(dataAccessProvider, transactionId, searchText))
			{
				DataTable toReturn = call.FillDataTable();
				return toReturn;
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpTransactionSel'.</summary>
		/// <param name="transactionId">Input parameter of stored procedure</param>
		/// <param name="searchText">Input parameter of stored procedure</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpTransactionSelCallAsQuery(System.Int32 transactionId, System.String searchText)
		{
			using(var dataAccessProvider = new DataAccessAdapter())
			{
				return GetSpTransactionSelCallAsQuery(transactionId, searchText, dataAccessProvider);
			}
		}

		/// <summary>Creates an IRetrievalQuery object for a call to the procedure 'SpTransactionSel'.</summary>
		/// <param name="transactionId">Input parameter of stored procedure</param>
		/// <param name="searchText">Input parameter of stored procedure</param>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <returns>IRetrievalQuery object which is ready to use for datafetching</returns>
		public static IRetrievalQuery GetSpTransactionSelCallAsQuery(System.Int32 transactionId, System.String searchText, IDataAccessCore dataAccessProvider)
		{
			return CreateSpTransactionSelCall(dataAccessProvider, transactionId, searchText).ToRetrievalQuery();
		}

		/// <summary>Creates the call object for the call 'SpBookingSel' to stored procedure 'SpBookingSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="bookingId">Input parameter</param>
		/// <param name="searchText">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpBookingSelCall(IDataAccessCore dataAccessProvider, System.Int32 bookingId, System.String searchText)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[HARS_Susmita].[dbo].[SpBookingSel]", "SpBookingSel")
							.AddParameter("@BookingId", "Int", 0, ParameterDirection.Input, true, 10, 0, bookingId)
							.AddParameter("@SearchText", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, searchText);
		}

		/// <summary>Creates the call object for the call 'SpBranchSel' to stored procedure 'SpBranchSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="branchId">Input parameter</param>
		/// <param name="searchText">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpBranchSelCall(IDataAccessCore dataAccessProvider, System.Int32 branchId, System.String searchText)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[HARS_Susmita].[dbo].[SpBranchSel]", "SpBranchSel")
							.AddParameter("@BranchId", "Int", 0, ParameterDirection.Input, true, 10, 0, branchId)
							.AddParameter("@SearchText", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, searchText);
		}

		/// <summary>Creates the call object for the call 'SpCustomerSel' to stored procedure 'SpCustomerSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="customerId">Input parameter</param>
		/// <param name="searchText">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpCustomerSelCall(IDataAccessCore dataAccessProvider, System.Int32 customerId, System.String searchText)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[HARS_Susmita].[dbo].[SpCustomerSel]", "SpCustomerSel")
							.AddParameter("@CustomerId", "Int", 0, ParameterDirection.Input, true, 10, 0, customerId)
							.AddParameter("@SearchText", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, searchText);
		}

		/// <summary>Creates the call object for the call 'SpHotelSel' to stored procedure 'SpHotelSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="hotelId">Input parameter</param>
		/// <param name="searchText">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpHotelSelCall(IDataAccessCore dataAccessProvider, System.Int32 hotelId, System.String searchText)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[HARS_Susmita].[dbo].[SpHotelSel]", "SpHotelSel")
							.AddParameter("@HotelId", "Int", 0, ParameterDirection.Input, true, 10, 0, hotelId)
							.AddParameter("@SearchText", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, searchText);
		}

		/// <summary>Creates the call object for the call 'SpInvoiceSel' to stored procedure 'SpInvoiceSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="invoiceId">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpInvoiceSelCall(IDataAccessCore dataAccessProvider, System.Int32 invoiceId)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[HARS_Susmita].[dbo].[SpInvoiceSel]", "SpInvoiceSel")
							.AddParameter("@InvoiceId", "Int", 0, ParameterDirection.Input, true, 10, 0, invoiceId);
		}

		/// <summary>Creates the call object for the call 'SpReservationSel' to stored procedure 'SpReservationSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="reservationId">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpReservationSelCall(IDataAccessCore dataAccessProvider, System.Int32 reservationId)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[HARS_Susmita].[dbo].[SpReservationSel]", "SpReservationSel")
							.AddParameter("@ReservationId", "Int", 0, ParameterDirection.Input, true, 10, 0, reservationId);
		}

		/// <summary>Creates the call object for the call 'SpRoomAvailabilitySel' to stored procedure 'SpRoomAvailabilitySel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="startDate">Input parameter</param>
		/// <param name="endDate">Input parameter</param>
		/// <param name="branchId">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpRoomAvailabilitySelCall(IDataAccessCore dataAccessProvider, System.DateTime startDate, System.DateTime endDate, System.Int32 branchId)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[HARS_Susmita].[dbo].[SpRoomAvailabilitySel]", "SpRoomAvailabilitySel")
							.AddParameter("@StartDate", "Date", 0, ParameterDirection.Input, true, 0, 0, startDate)
							.AddParameter("@EndDate", "Date", 0, ParameterDirection.Input, true, 0, 0, endDate)
							.AddParameter("@BranchId", "Int", 0, ParameterDirection.Input, true, 10, 0, branchId);
		}

		/// <summary>Creates the call object for the call 'SpRoomSel' to stored procedure 'SpRoomSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="roomId">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpRoomSelCall(IDataAccessCore dataAccessProvider, System.Int32 roomId)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[HARS_Susmita].[dbo].[SpRoomSel]", "SpRoomSel")
							.AddParameter("@RoomId", "Int", 0, ParameterDirection.Input, true, 10, 0, roomId);
		}

		/// <summary>Creates the call object for the call 'SpSeasonSel' to stored procedure 'SpSeasonSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="seasonId">Input parameter</param>
		/// <param name="searchText">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpSeasonSelCall(IDataAccessCore dataAccessProvider, System.Int32 seasonId, System.String searchText)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[HARS_Susmita].[dbo].[SpSeasonSel]", "SpSeasonSel")
							.AddParameter("@SeasonId", "Int", 0, ParameterDirection.Input, true, 10, 0, seasonId)
							.AddParameter("@SearchText", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, searchText);
		}

		/// <summary>Creates the call object for the call 'SpServiceCategorySel' to stored procedure 'SpServiceCategorySel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="serviceCategoryId">Input parameter</param>
		/// <param name="searchText">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpServiceCategorySelCall(IDataAccessCore dataAccessProvider, System.Int32 serviceCategoryId, System.String searchText)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[HARS_Susmita].[dbo].[SpServiceCategorySel]", "SpServiceCategorySel")
							.AddParameter("@ServiceCategoryId", "Int", 0, ParameterDirection.Input, true, 10, 0, serviceCategoryId)
							.AddParameter("@SearchText", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, searchText);
		}

		/// <summary>Creates the call object for the call 'SpServiceSel' to stored procedure 'SpServiceSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="serviceId">Input parameter</param>
		/// <param name="searchText">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpServiceSelCall(IDataAccessCore dataAccessProvider, System.Int32 serviceId, System.String searchText)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[HARS_Susmita].[dbo].[SpServiceSel]", "SpServiceSel")
							.AddParameter("@ServiceId", "Int", 0, ParameterDirection.Input, true, 10, 0, serviceId)
							.AddParameter("@SearchText", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, searchText);
		}

		/// <summary>Creates the call object for the call 'SpTransactionSel' to stored procedure 'SpTransactionSel'.</summary>
		/// <param name="dataAccessProvider">The data access provider.</param>
		/// <param name="transactionId">Input parameter</param>
		/// <param name="searchText">Input parameter</param>
		/// <returns>Ready to use StoredProcedureCall object</returns>
		private static StoredProcedureCall CreateSpTransactionSelCall(IDataAccessCore dataAccessProvider, System.Int32 transactionId, System.String searchText)
		{
			return new StoredProcedureCall(dataAccessProvider, @"[HARS_Susmita].[dbo].[SpTransactionSel]", "SpTransactionSel")
							.AddParameter("@TransactionId", "Int", 0, ParameterDirection.Input, true, 10, 0, transactionId)
							.AddParameter("@SearchText", "NVarChar", 2147483647, ParameterDirection.Input, true, 0, 0, searchText);
		}


	}
}
